{
    "name": "MainThings D Color Scheme",

    "variables":
    {
        "bright"   : "gold",
        "name"     : "#daa520",
        "name2"    : "peru",
        "mainword" : "#a52a2a",
        "keyword"  : "darkgreen",
        "type"     : "saddlebrown",
        "blue"     : "#0d2a77",
        "link"     : "#5F9EA0",
        "modifier" : "darkgreen",
        "default"  : "gray",
        "b3"       : "#555555",
        "b2"       : "#383838",
        "b1"       : "#282828",
        "back"     : "black",
        "error"    : "red",
    },

    "globals":
    {
        "background"                  : "var(back)",
        "foreground"                  : "var(default)",
        "caret"                       : "var(bright)",

        "gutter"                      : "var(back)",
        "gutter_foreground"           : "var(b3)",

        "selection"                   : "var(b1)",
        "inactive_selection"          : "var(b1)",

        "brackets_options"            : "underline foreground",
        "brackets_foreground"         : "var(bright)",
        "bracket_contents_options"    : "stippled_underline",
        "bracket_contents_foreground" : "var(bright)",

        "guide"                       : "var(b1)",

        "highlight"                   : "var(bright)",
        "find_highlight"              : "var(b1)",
        "find_highlight_foreground"   : "var(bright)",

        "line_highlight"              : "var(b1)"
    },

    "rules":
    [
        // Number
        {
            "name": "Number",
            "scope": "source.d constant.numeric",
            "foreground": "var(default)"
        },

        // Number Type
        {
            "name": "Number Type",
            "scope": "source.d constant.numeric.integer.binary punctuation.definition.numeric.base",
            "foreground": "var(type)"
        },

        // Interface
        // Interface
        {
            "name": "Interface",
            "scope": "source.d meta.interface storage.type.interface keyword.declaration.interface",
            "foreground": "var(type)"
        },

        // Interface Name
        {
            "name": "Interface Name",
            "scope": "source.d meta.interface entity.name.interface",
            "foreground": "var(name)"
        },

        // Interface Method Type
        {
            "name": "Interface Method Type",
            "scope": "source.d meta.interface meta.block meta.path storage.type",
            "foreground": "var(type)"
        },

        // Interface Method Name
        {
            "name": "Interface Method Name",
            "scope": "source.d meta.interface meta.block meta.function entity.name.function",
            "foreground": "var(name)"
        },

        // Interface Method Arg Name
        {
            "name": "Interface Method Arg Name",
            "scope": "source.d meta.interface meta.block meta.function.parameters variable.parameter",
            "foreground": "var(name2)"
        },

        // Class
        {
            "name": "Class",
            "scope": "source.d meta.class storage.type.class keyword.declaration.class",
            "foreground": "var(type)"
        },

        // Class Name
        {
            "name": "Class Name",
            "scope": "source.d meta.class entity.name.class",
            "foreground": "var(name)"
        },

        // Class Var Name
        {
            "name": "Class Var Name",
            "scope": "source.d meta.class meta.block variable.other",
            "foreground": "var(name2)"
        },

        // Class Method Type
        {
            "name": "Class Method Type",
            "scope": "source.d meta.class meta.block meta.path storage.type",
            "foreground": "var(type)"
        },

        // Class Method Name
        {
            "name": "Class Method Name",
            "scope": "source.d meta.class meta.block meta.function entity.name.function",
            "foreground": "var(name)"
        },

        // Class Method Arg
        {
            "name": "Class Method Arg",
            "scope": "source.d meta.class meta.block meta.function.parameters variable.parameter",
            "foreground": "var(name2)"
        },

        // Class Method Declaraion Var Type
        {
            "name": "Class Method Declaraion Var Type",
            "scope": "source.d meta.class meta.block meta.function meta.block meta.path storage.type",
            "foreground": "var(type)"
        },
        {
            "name": "Class Method Declaraion Var Type 2",
            "scope": "source.d meta.class.d meta.block.d meta.function.parameters.d meta.path.d variable.other.d",
            "foreground": "var(type)"
        },

        // Class Method Declaraion Var Name
        {
            "name": "Class Method Declaraion Var Name",
            "scope": "source.d meta.class meta.block meta.function meta.block variable.other",
            "foreground": "var(name2)"
        },

        // Class Method Var Name
        {
            "name": "Class Method Var Name",
            "scope": "source.d meta.class meta.block meta.function meta.block meta.path variable.other",
            "foreground": "var(name2)"
        },

        // Class Method Function Call
        {
            "name": "Class Method Function Call",
            "scope": "source.d meta.class meta.block meta.function meta.block meta.function-call meta.path variable.function",
            "foreground": "var(name)"
        },


        // Function
        // Function Name
        {
            "name": "Function",
            "scope": "source.d meta.function entity.name.function",
            "foreground": "var(name)"
        },

        // Function Arg Name
        {
            "name": "Function Arg Name",
            "scope": "source.d meta.function.parameters variable.parameter",
            "foreground": "var(name2)"
        },

        // Function - Function Call
        {
            "name": "Function - Function Call",
            "scope": "source.d meta.function meta.block meta.function-call meta.path variable.function",
            "foreground": "var(name)"
        },

        // Function - Function Call Arg
        {
            "name": "Function - Function Call Arg",
            "scope": "source.d meta.function meta.block meta.function-call meta.path variable.other",
            "foreground": "var(name2)"
        },

        // Function -- Var Name
        {
            "name": "Function -- Var Name",
            "scope": "source.d meta.function meta.block meta.path variable.other",
            "foreground": "var(name2)"
        },


        // Alias
        // Alias 
        {
            "name": "Alias",
            "scope": "source.d keyword.control.alias",
            "foreground": "var(keyword)"
        },

        // Alias Type
        {
            "name": "Alias Type",
            "scope": "source.d meta.path storage.type",
            "foreground": "var(type)"
        },

        // Alias 
        // Alias
        {
            "name": "Alias",
            "scope": "source.d keyword.control.alias",
            "foreground": "var(type)"
        },
        // Alias Name
        {
            "name": "Alias Name",
            "scope": "source.d entity.name.type",
            "foreground": "var(name2)"
        },


        // Keyword
        {
            "name": "Keyword Private-Public",
            "scope": "source.d storage.modifier.access-control",
            "foreground": "var(type)"
        },
        {
            "name": "Keyword If-Else",
            "scope": "source.d keyword.control",
            "foreground": "var(keyword)"
        },
        {
            "name": "Keyword Assert",
            "scope": "source.d keyword.other.assert",
            "foreground": "var(mainword)"
        },
        {
            "name": "Keyword Super",
            "scope": "source.d meta.class meta.block meta.function meta.block variable.language.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "Keyword With",
            "scope": "source.d meta.function.d meta.block.d keyword.other.with",
            "foreground": "var(keyword)"
        },
        {
            "name": "Keyword New",
            "scope": "source.d meta.function.d meta.block.d keyword.operator.word.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "Keyword Function",
            "scope": "source.d keyword.other.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "Keyword Final Switch",
            "scope": "source.d meta.class meta.block meta.function meta.block storage.modifier",
            "foreground": "var(modifier)"
        },


        // Module 
        // Module 
        {
            "name": "Keyword Module",
            "scope": "source.d meta.namespace.d keyword.declaration.namespace.d",
            "foreground": "var(type)"
        },

        // Module Name
        {
            "name": "Module Name Path",
            "scope": "source.d meta.namespace.d meta.path.d variable.other.d",
            "foreground": "var(name2)"
        },
        {
            "name": "Module Name",
            "scope": "source.d meta.namespace.d meta.path.d entity.name.namespace.d",
            "foreground": "var(name2)"
        },


        // Import
        {
            "name": "Import",
            "scope": "source.d keyword.control.import.d",
            "foreground": "var(type)"
        },

        // Import Var Name
        {
            "name": "Import Var Name",
            "scope": "source.d meta.path.d variable.other.d",
            "foreground": "var(name2)"
        },



        // Struct
        // Struct
        {
            "name": "Struct",
            "scope": "source.d meta.struct storage.type.struct keyword.declaration.struct",
            "foreground": "var(type)"
        },

        // Struct Name
        {
            "name": "Struct Name",
            "scope": "source.d meta.struct entity.name.struct",
            "foreground": "var(name)"
        },

        // Struct Var Type
        {
            "name": "Struct Var Type",
            "scope": "source.d meta.struct meta.block meta.path storage.type",
            "foreground": "var(type)"
        },
        {
            "name": "Struct Var Type 2",
            "scope": "source.d meta.struct.d meta.block.d meta.path.d variable.other.d",
            "foreground": "var(type)"
        },
        {
            "name": "Struct Var Type 3",
            "scope": "source.d meta.struct meta.block meta.path variable.other",
            "foreground": "var(type)"
        },

        // Struct Var Name
        {
            "name": "Struct Var Name",
            "scope": "source.d meta.struct meta.block variable.other",
            "foreground": "var(name2)"
        },


        // Enum
        // Enum
        {
            "name": "Enum",
            "scope": "source.d meta.enum storage.type.enum keyword.declaration.enum",
            "foreground": "var(type)"
        },

        // Enum Name
        {
            "name": "Enum Name",
            "scope": "source.d meta.enum entity.name.enum",
            "foreground": "var(name)"
        },

        // Enum Var Name
        {
            "name": "Enum Var Name",
            "scope": "source.d meta.enum entity.name.constant",
            "foreground": "var(name2)"
        },


        // String
        {
            "name": "String",
            "scope": "source.d string",
            "foreground": "var(default)"
        },


        // Constant
        {
            "name": "Constant",
            "scope": "source.d constant",
            "foreground": "var(name2)"
        },


        // Error
        {
            "name": "Invalid",
            "scope": "source.d invalid",
            "foreground": "var(error)"
        },


        // JSON
        // JSON Key
        {
            "name": "JSON Key Title",
            "scope": "source.json meta.mapping.key.json string.quoted.double.json",
            "foreground": "var(name)"
        },
        // JSON Sub Key
        {
            "name": "JSON Sub Key",
            "scope": "source.json meta.mapping.value.json meta.mapping.key.json string.quoted.double.json",
            "foreground": "var(type)"
        },
        // JSON Value
        {
            "name": "JSON String Value",
            "scope": "source.json meta.mapping.value.json meta.mapping.value.json string.quoted.double.json",
            "foreground": "var(name2)"
        },
        {
            "name": "JSON String Value 2",
            "scope": "source.json meta.mapping.value.json meta.sequence.json meta.mapping.value.json string.quoted.double.json",
            "foreground": "var(name2)"
        },
        {
            "name": "JSON String Value 3",
            "scope": "source.json meta.mapping.value.json meta.sequence.json string.quoted.double.json",
            "foreground": "var(name2)"
        },
        {
            "name": "JSON String Value 4",
            "scope": "source.json meta.mapping.value.json string.quoted.double.json",
            "foreground": "var(name2)"
        },


        // MD
        // MD Header
        {
            "name": "MD Header Mark",
            "scope": "text.html.markdown meta.block-level.markdown markup.heading punctuation.definition.heading.begin.markdown",
            "foreground": "var(type)"
        },
        {
            "name": "MD Header",
            "scope": "text.html.markdown meta.block-level.markdown markup.heading entity.name.section.markdown",
            "foreground": "var(name)"
        },

        // MD Link
        {
            "name": "MD Link Name",
            "scope": "text.html.markdown meta.image.inline.description",
            "foreground": "var(type)"
        },
        {
            "name": "MD Link",
            "scope": "text.html.markdown markup.underline.link.markdown-gfm",
            "foreground": "var(link)"
        },
        {
            "name": "MD Link Name 2",
            "scope": "text.html.markdown meta.link.inline.description",
            "foreground": "var(type)"
        },
        {
            "name": "MD Link 2",
            "scope": "text.html.markdown meta.link.inline.markdown markup.underline.link",
            "foreground": "var(link)"
        },
        {
            "name": "MD Image Link",
            "scope": "text.html.markdown meta.image.inline markup.underline.link.image",
            "foreground": "var(link)"
        },

        // MD Raw
        {
            "name": "MD Raw",
            "scope": "text.html.markdown markup.raw.inline.markdown",
            "foreground": "var(name2)"
        },
        {
            "name": "MD Raw Code",
            "scope": "text.html.markdown markup.raw.code-fence",
            "foreground": "var(name2)"
        },
        {
            "name": "MD Raw Code Block",
            "scope": "text.html.markdown meta.code-fence",
            "foreground": "var(name2)"
        },

        // MD List
        {
            "name": "MD List Mark",
            "scope": "text.html.markdown markup.list punctuation.definition.list_item",
            "foreground": "var(type)"
        },
        {
            "name": "MD List Mark",
            "scope": "text.html.markdown markup.list.numbered.bullet",
            "foreground": "var(type)"
        },
        {
            "name": "MD List Text",
            "scope": "text.html.markdown markup.list meta.paragraph.list",
            "foreground": "var(name2)"
        },

        // MD Bold
        {
            "name": "MD Bold",
            "scope": "markup.bold.markdown",
            "font_style": "bold"
        },

        // MD Italic
        {
            "name": "MD Italic",
            "scope": "markup.italic.markdown",
            "font_style": "italic"
        },

    ]
}
