{
    "name": "MainThings D Color Scheme",

    "variables":
    {
        "bright"   : "gold",
        "name"     : "#daa520",
        "name2"    : "peru",
        "mainword" : "#a52a2a",
        "type"     : "saddlebrown",
        "keyword"  : "darkgreen",
        "modifier" : "darkgreen",
        "blue"     : "#153487",
        "link"     : "#4e5794",
        "default"  : "gray",
        "b3"       : "#4F4F4F",
        "b2"       : "#383838",
        "b1"       : "#282828",
        "back"     : "black",
        "error"    : "red",
    },

    "globals":
    {
        "background"                  : "var(back)",
        "foreground"                  : "var(default)",
        "caret"                       : "var(bright)",

        "gutter"                      : "var(back)",
        "gutter_foreground"           : "var(b3)",

        "selection"                   : "var(b1)",
        "inactive_selection"          : "var(b1)",

        "brackets_options"            : "underline foreground",
        "brackets_foreground"         : "var(bright)",
        "bracket_contents_options"    : "stippled_underline",
        "bracket_contents_foreground" : "var(bright)",

        "guide"                       : "var(b1)",

        "highlight"                   : "var(bright)",
        "find_highlight"              : "var(b1)",
        "find_highlight_foreground"   : "var(bright)",

        "line_highlight"              : "var(b1)"
    },

    "rules":
    [
        // Default
        // Class
        {
            "name": "Class",
            "scope": "entity.name.type.class entity.name.class",
            "foreground": "var(name)"
        },

        // Function
        {
            "name": "Function",
            "scope": "meta.function.c entity.name.function",
            "foreground": "var(name)"
        },

        // Function Call
        {
            "name": "Function Call",
            "scope": "meta.function-call support.function",
            "foreground": "var(name)"
        },

        // Var
        {
            "name": "Var",
            "scope": "variable",
            "foreground": "var(name2)"
        },

        // Name
        {
            "name": "Name",
            "scope": "entity.name",
            "foreground": "var(name2)"
        },
        {
            "name": "Name 2",
            "scope": "entity.tag.name",
            "foreground": "var(name2)"
        },

        // Constant Name
        {
            "name": "Constant Name",
            "scope": "entity.name.constant",
            "foreground": "var(name2)"
        },

        // Type
        {
            "name": "Type",
            "scope": "storage.type",
            "foreground": "var(type)"
        },

        // Number Constant Type
        {
            "name": "Number Constant Type",
            "scope": "constant.numeric storage.type",
            "foreground": "var(b3)"
        },

        // Keyword
        // {
        //     "name": "Keyword",
        //     "scope": "keyword",
        //     "foreground": "var(keyword)"
        // },

        // Keyword Control
        {
            "name": "Keyword Control",
            "scope": "keyword.control",
            "foreground": "var(type)"
        },

        // Keyword Other
        {
            "name": "Keyword Other",
            "scope": "keyword.other",
            "foreground": "var(keyword)"
        },

        // Comment
        {
            "name": "Comment",
            "scope": "comment",
            "foreground": "var(b3)"
        },


        // D
        // D Number
        {
            "name": "D Number",
            "scope": "source.d constant.numeric",
            "foreground": "var(default)"
        },

        // D Number Type
        {
            "name": "D Number Type",
            "scope": "source.d constant.numeric punctuation.definition.numeric.base",
            "foreground": "var(b3)"
        },

        // D Interface
        // D Interface
        {
            "name": "D Interface",
            "scope": "source.d meta.interface storage.type.interface keyword.declaration.interface",
            "foreground": "var(type)"
        },

        // D Interface Name
        {
            "name": "D Interface Name",
            "scope": "source.d meta.interface entity.name.interface",
            "foreground": "var(name)"
        },

        // D Interface Method Type
        {
            "name": "D Interface Method Type",
            "scope": "source.d meta.interface meta.block meta.path storage.type",
            "foreground": "var(type)"
        },

        // D Interface Method Name
        {
            "name": "D Interface Method Name",
            "scope": "source.d meta.interface meta.block meta.function entity.name.function",
            "foreground": "var(name)"
        },

        // D Interface Method Arg Name
        {
            "name": "D Interface Method Arg Name",
            "scope": "source.d meta.interface meta.block meta.function.parameters variable.parameter",
            "foreground": "var(name2)"
        },

        // D Class
        {
            "name": "D Class",
            "scope": "source.d meta.class storage.type.class keyword.declaration.class",
            "foreground": "var(type)"
        },

        // D Class Name
        {
            "name": "D Class Name",
            "scope": "source.d meta.class entity.name.class",
            "foreground": "var(name)"
        },

        // D Class Var Type
        {
            "name": "D Class Var Type",
            "scope": "source.d meta.class.d meta.block.d meta.path.d variable.other.d",
            "foreground": "var(type)"
        },
        // D Class Var
        {
            "name": "D Class Var",
            "scope": "source.d meta.class.d meta.block.d meta.function.d meta.block.d meta.path.d variable.other.d",
            "foreground": "var(name2)"
        },
        {
            "name": "D Class Var Name",
            "scope": "source.d meta.class.d meta.block.d variable.other.d",
            "foreground": "var(name2)"
        },

        // D Class Method Type
        {
            "name": "D Class Method Type",
            "scope": "source.d meta.class meta.block meta.path storage.type",
            "foreground": "var(type)"
        },

        // D Class Method Name
        {
            "name": "D Class Method Name",
            "scope": "source.d meta.class meta.block meta.function entity.name.function",
            "foreground": "var(name)"
        },

        // D Class Method Arg
        {
            "name": "D Class Method Arg",
            "scope": "source.d meta.class meta.block meta.function.parameters variable.parameter",
            "foreground": "var(name2)"
        },

        // D Class Method Declaraion Var Type
        {
            "name": "D Class Method Declaraion Var Type",
            "scope": "source.d meta.class meta.block meta.function meta.block meta.path storage.type",
            "foreground": "var(type)"
        },
        {
            "name": "D Class Method Declaraion Var Type 2",
            "scope": "source.d meta.class.d meta.block.d meta.function.parameters.d meta.path.d variable.other.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Class Method Declaraion Var Type 3",
            "scope": "source.d meta.class.d meta.block.d meta.function.parameters.d storage.type.d",
            "foreground": "var(type)"
        },

        // D Class Method Declaraion Var Name
        {
            "name": "D Class Method Declaraion Var Name",
            "scope": "source.d meta.class meta.block meta.function meta.block variable.other",
            "foreground": "var(name2)"
        },

        // D Class Method Var Name
        {
            "name": "D Class Method Var Name",
            "scope": "source.d meta.class meta.block meta.function meta.block meta.path variable.other",
            "foreground": "var(name2)"
        },
        {
            "name": "D Class Method Var Name",
            "scope": "source.d meta.struct.d meta.block.d meta.function.d meta.block.d meta.path.d variable.other.d",
            "foreground": "var(name2)"
        },

        // D Class Method Function Call
        {
            "name": "D Class Method Function Call",
            "scope": "source.d meta.class meta.block meta.function meta.block meta.function-call meta.path variable.function",
            "foreground": "var(name)"
        },


        // D Function
        // D Function Name
        {
            "name": "D Function",
            "scope": "source.d meta.function entity.name.function",
            "foreground": "var(name)"
        },

        // D Function Arg Name
        {
            "name": "D Function Arg Name",
            "scope": "source.d meta.function.parameters variable.parameter",
            "foreground": "var(name2)"
        },

        // D Function - Function Call
        {
            "name": "D Function - Function Call",
            "scope": "source.d meta.function-call.d meta.path.d variable.function.d",
            "foreground": "var(name)"
        },
        {
            "name": "D Function - Function Call 2",
            "scope": "source.d meta.function meta.block meta.function-call meta.path variable.function",
            "foreground": "var(name)"
        },

        // D Function - Function Call Arg
        {
            "name": "D Function - Function Call Arg",
            "scope": "source.d meta.function meta.block meta.function-call meta.path variable.other",
            "foreground": "var(name2)"
        },

        // D Function - Var Type
        {
            "name": "D Function -- Var Type",
            "scope": "source.d storage.type.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Function -- Var Type 1",
            "scope": "source.d meta.function.d meta.block.d storage.type.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Function -- Var Type 2",
            "scope": "source.d storage.modifier.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Function -- Var Type 3",
            "scope": "source.d meta.block.d storage.modifier.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Function -- Var Type 4",
            "scope": "source.d meta.function.d meta.block.d storage.modifier.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Function -- Var Type 5",
            "scope": "source.d meta.function-call.d storage.type.d",
            "foreground": "var(type)"
        },
        // D Function - Var Name
        {
            "name": "D Function -- Var Name",
            "scope": "source.d meta.function meta.block meta.path variable.other",
            "foreground": "var(name2)"
        },
        {
            "name": "D Function -- Var Name 2",
            "scope": "source.d meta.function.d meta.block.d variable.other.d",
            "foreground": "var(name2)"
        },
        {
            "name": "D Function -- Var Name 3",
            "scope": "source.d meta.function.d meta.block.d variable.parameter.d",
            "foreground": "var(name2)"
        },
        {
            "name": "D Function -- Var Name 4",
            "scope": "source.d meta.class.d meta.block.d meta.block.d variable.parameter.d",
            "foreground": "var(name2)"
        },


        // D Module Var
        {
            "name": "D Module Var",
            "scope": "source.d variable.other.d",
            "foreground": "var(name2)"
        },
        {
            "name": "D Module Var Function",
            "scope": "source.d variable.function.d",
            "foreground": "var(type)"
        },


        // D Case Label
        {
            "name": "D Case Label",
            "scope": "source.d entity.name.label.d",
            "foreground": "var(name2)"
        },


        // D Alias
        // D Alias 
        {
            "name": "D Alias",
            "scope": "source.d keyword.control.alias",
            "foreground": "var(mainword)"
        },
        // D Alias Type
        {
            "name": "D Alias Type",
            "scope": "source.d meta.path storage.type",
            "foreground": "var(type)"
        },
        // D Alias Name
        {
            "name": "D Alias Name",
            "scope": "source.d entity.name.type",
            "foreground": "var(name2)"
        },


        // D Keyword
        {
            "name": "D Keyword Private-Public",
            "scope": "source.d storage.modifier.access-control",
            "foreground": "var(type)"
        },
        {
            "name": "D Keyword If-Else",
            "scope": "source.d keyword.control",
            "foreground": "var(keyword)"
        },
        {
            "name": "D Keyword Assert",
            "scope": "source.d keyword.other.assert",
            "foreground": "var(mainword)"
        },
        {
            "name": "D Keyword Super",
            "scope": "source.d meta.class meta.block meta.function meta.block variable.language.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "D Keyword this",
            "scope": "source.d meta.struct.d meta.function.d meta.block.d variable.language.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "D Keyword With",
            "scope": "source.d meta.function.d meta.block.d keyword.other.with",
            "foreground": "var(keyword)"
        },
        {
            "name": "D Keyword New",
            "scope": "source.d meta.function.d meta.block.d keyword.operator.word.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "D Keyword Function",
            "scope": "source.d keyword.other.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "D Keyword Final Switch",
            "scope": "source.d meta.class meta.block meta.function meta.block storage.modifier",
            "foreground": "var(modifier)"
        },
        {
            "name": "D Keyword Logical",
            "scope": "source.d keyword.operator.logical.d",
            "foreground": "var(b3)"
        },
        {
            "name": "D Keyword Group",
            "scope": "source.d punctuation.section.group",
            "foreground": "var(default)"
        },
        {
            "name": "D Keyword override",
            "scope": "source.d meta.class.d meta.block.d storage.modifier.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Keyword external",
            "scope": "source.d keyword.other.external.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Keyword Version Name",
            "scope": "source.d string.other.d",
            "foreground": "var(name2)"
        },
        {
            "name": "D Keyword Pragma",
            "scope": "source.d keyword.other.pragma.d",
            "foreground": "var(mainword)"
        },
        {
            "name": "D Keyword Union",
            "scope": "source.d keyword.declaration.union.d",
            "foreground": "var(type)"
        },


        // D Module 
        // D Module 
        {
            "name": "D Keyword Module",
            "scope": "source.d meta.namespace.d keyword.declaration.namespace.d",
            "foreground": "var(type)"
        },

        // D Module Name
        {
            "name": "D Module Name Path",
            "scope": "source.d meta.namespace.d meta.path.d variable.other.d",
            "foreground": "var(name2)"
        },
        {
            "name": "D Module Name",
            "scope": "source.d meta.namespace.d meta.path.d entity.name.namespace.d",
            "foreground": "var(name2)"
        },


        // D Import
        {
            "name": "D Import",
            "scope": "source.d keyword.control.import.d",
            "foreground": "var(type)"
        },


        // D Struct
        // D Struct
        {
            "name": "D Struct",
            "scope": "source.d meta.struct storage.type.struct keyword.declaration.struct",
            "foreground": "var(type)"
        },

        // D Struct Name
        {
            "name": "D Struct Name",
            "scope": "source.d meta.struct entity.name.struct",
            "foreground": "var(name)"
        },

        // D Struct Var Type
        {
            "name": "D Struct Var Type",
            "scope": "source.d meta.struct meta.block meta.path storage.type",
            "foreground": "var(type)"
        },
        {
            "name": "D Struct Var Type 2",
            "scope": "source.d meta.struct.d meta.block.d meta.path.d variable.other.d",
            "foreground": "var(type)"
        },
        {
            "name": "D Struct Var Type 3",
            "scope": "source.d meta.struct meta.block meta.path variable.other",
            "foreground": "var(type)"
        },

        // D Struct Var Name
        {
            "name": "D Struct Var Name",
            "scope": "source.d meta.struct meta.block variable.other",
            "foreground": "var(name2)"
        },


        // D Template
        // D Template Name
        {
            "name": "D Template Name",
            "scope": "source.d entity.name.template.d",
            "foreground": "var(name)"
        },


        // D Enum
        // D Enum
        {
            "name": "D Enum",
            "scope": "source.d meta.enum storage.type.enum keyword.declaration.enum",
            "foreground": "var(type)"
        },

        // D Enum Name
        {
            "name": "D Enum Name",
            "scope": "source.d meta.enum entity.name.enum",
            "foreground": "var(name)"
        },

        // D Enum Var Name
        {
            "name": "D Enum Var Name",
            "scope": "source.d meta.enum entity.name.constant",
            "foreground": "var(name2)"
        },


        // D String
        {
            "name": "D String",
            "scope": "source.d string",
            "foreground": "var(default)"
        },
        {
            "name": "D String Quantifier",
            "scope": "source.d meta.string.d string.quoted.double.raw.d storage.modifier.string.d",
            "foreground": "var(type)"
        },


        // D Constant
        {
            "name": "D Constant",
            "scope": "source.d constant",
            "foreground": "var(name2)"
        },


        // D Error
        {
            "name": "D Invalid",
            "scope": "source.d invalid",
            "foreground": "var(error)"
        },


        // JSON
        // JSON Key
        {
            "name": "JSON Key Title",
            "scope": "source.json meta.mapping.key.json string.quoted.double.json",
            "foreground": "var(name)"
        },
        // JSON Sub Key
        {
            "name": "JSON Sub Key",
            "scope": "source.json meta.mapping.value.json meta.mapping.key.json string.quoted.double.json",
            "foreground": "var(name2)"
        },
        // JSON Value
        {
            "name": "JSON String Value",
            "scope": "source.json meta.mapping.value.json meta.mapping.value.json string.quoted.double.json",
            "foreground": "var(type)"
        },
        {
            "name": "JSON String Value 2",
            "scope": "source.json meta.mapping.value.json meta.sequence.json meta.mapping.value.json string.quoted.double.json",
            "foreground": "var(type)"
        },
        {
            "name": "JSON String Value 3",
            "scope": "source.json meta.mapping.value.json meta.sequence.json string.quoted.double.json",
            "foreground": "var(type)"
        },
        {
            "name": "JSON String Value 4",
            "scope": "source.json meta.mapping.value.json string.quoted.double.json",
            "foreground": "var(type)"
        },


        // MD
        // MD Header
        {
            "name": "MD Header Mark",
            "scope": "text.html.markdown meta.block-level.markdown markup.heading punctuation.definition.heading.begin.markdown",
            "foreground": "var(type)"
        },
        {
            "name": "MD Header",
            "scope": "text.html.markdown meta.block-level.markdown markup.heading entity.name.section.markdown",
            "foreground": "var(name)"
        },

        // MD Link
        {
            "name": "MD Link Name",
            "scope": "text.html.markdown meta.image.inline.description",
            "foreground": "var(type)"
        },
        {
            "name": "MD Link",
            "scope": "text.html.markdown markup.underline.link.markdown-gfm",
            "foreground": "var(link)"
        },
        {
            "name": "MD Link Name 2",
            "scope": "text.html.markdown meta.link.inline.description",
            "foreground": "var(type)"
        },
        {
            "name": "MD Link 2",
            "scope": "text.html.markdown meta.link.inline.markdown markup.underline.link",
            "foreground": "var(link)"
        },
        {
            "name": "MD Link Name 3",
            "scope": "text.html.markdown meta.link.reference.def.markdown entity.name.reference.link.markdown",
            "foreground": "var(type)"
        },
        {
            "name": "MD Link 3",
            "scope": "text.html.markdown meta.link.reference.def.markdown markup.underline.link.markdown",
            "foreground": "var(link)"
        },
        {
            "name": "MD Link Reference Name",
            "scope": "text.html.markdown meta.link.reference.description.markdown",
            "foreground": "var(type)"
        },
        {
            "name": "MD Link Reference Name 2",
            "scope": "text.html.markdown meta.link.reference.literal.description.markdown",
            "foreground": "var(type)"
        },
        {
            "name": "MD Link Reference",
            "scope": "text.html.markdown meta.link.reference.markdown constant.other.reference.link.markdown",
            "foreground": "var(link)"
        },
        {
            "name": "MD Image Link Name",
            "scope": "text.html.markdown meta.image.reference.description.markdown",
            "foreground": "var(type)"
        },
        {
            "name": "MD Image Link",
            "scope": "text.html.markdown meta.image.inline markup.underline.link.image",
            "foreground": "var(link)"
        },
        {
            "name": "MD Image Link 2",
            "scope": "text.html.markdown meta.image.reference.markdown constant.other.reference.link.markdown",
            "foreground": "var(link)"
        },

        // MD Raw
        {
            "name": "MD Raw",
            "scope": "text.html.markdown markup.raw.inline.markdown",
            "foreground": "var(name2)"
        },
        {
            "name": "MD Raw Code",
            "scope": "text.html.markdown markup.raw.code-fence",
            "foreground": "var(name2)"
        },
        {
            "name": "MD Raw Code Block",
            "scope": "text.html.markdown meta.code-fence",
            "foreground": "var(name2)"
        },
        {
            "name": "MD Raw Code Block Definition",
            "scope": "text.html.markdown meta.paragraph.markdown meta.code-fence.definition",
            "foreground": "var(type)",
            "font_style": "italic"
        },

        // MD List
        {
            "name": "MD List Mark",
            "scope": "text.html.markdown markup.list punctuation.definition.list_item",
            "foreground": "var(type)"
        },
        {
            "name": "MD List Mark",
            "scope": "text.html.markdown markup.list.numbered.bullet",
            "foreground": "var(type)"
        },
        {
            "name": "MD List Text",
            "scope": "text.html.markdown markup.list meta.paragraph.list",
            "foreground": "var(default)"
        },

        // MD Bold
        {
            "name": "MD Bold",
            "scope": "markup.bold.markdown",
            "font_style": "bold"
        },

        // MD Italic
        {
            "name": "MD Italic",
            "scope": "markup.italic.markdown",
            "font_style": "italic"
        },


        // Shell
        // Shell Function call
        {
            "name": "Shell Function call",
            "scope": "source.shell.bash meta.function-call.shell variable.function.shell",
            "foreground": "var(name)"
        },
        {
            "name": "Shell Function call 2",
            "scope": "source.shell.bash meta.function-call.shell support.function",
            "foreground": "var(name)"
        },
        {
            "name": "Shell Function Parameter Name",
            "scope": "source.shell.bash meta.function-call.arguments.shell variable.parameter.option.shell",
            "foreground": "var(type)"
        },
        {
            "name": "Shell Function Call Arg",
            "scope": "source.shell.bash meta.function-call.arguments",
            "foreground": "var(name2)"
        },
        {
            "name": "Shell Function Call Arg Operator",
            "scope": "source.shell.bash meta.function-call.arguments.shell keyword.operator",
            "foreground": "var(default)"
        },
        {
            "name": "Shell Function Call Arg Brace",
            "scope": "source.shell.bash meta.function-call.arguments.shell support.function.double-brace",
            "foreground": "var(default)"
        },
        {
            "name": "Shell Operator =",
            "scope": "source.shell.bash meta.function-call.arguments.shell keyword.operator.assignment.option.shell",
            "foreground": "var(default)"
        },

        // Shell Var
        {
            "name": "Shell Var Mark",
            "scope": "source.shell.bash punctuation.definition.variable.shell",
            "foreground": "var(type)"
        },
        {
            "name": "Shell Var",
            "scope": "source.shell.bash variable",
            "foreground": "var(name2)"
        },
        {
            "name": "Shell Var in For",
            "scope": "source.shell.bash meta.group.for.shell",
            "foreground": "var(name2)"
        },

        // Shell If-Else-Fi
        {
            "name": "Shell If-Else-Fi",
            "scope": "source.shell.bash keyword.control.if",
            "foreground": "var(keyword)"
        },

        // Shell For-Do-Done
        {
            "name": "Shell For",
            "scope": "source.shell.bash keyword.control.for",
            "foreground": "var(keyword)"
        },
        {
            "name": "Shell For Do",
            "scope": "source.shell.bash keyword.control.do",
            "foreground": "var(keyword)"
        },
        {
            "name": "Shell For Done",
            "scope": "source.shell.bash keyword.control.done",
            "foreground": "var(keyword)"
        },
        {
            "name": "Shell For In",
            "scope": "source.shell.bash meta.group.for.shell keyword.control.in.shell",
            "foreground": "var(keyword)"
        },

        // Python
        // Python Function
        // Python Function Def
        {
            "name": "Python Def",
            "scope": "source.python meta.function.python storage.type",
            "foreground": "var(type)"
        },
        // Python Function Name
        {
            "name": "Python Function Name",
            "scope": "source.python meta.function.python entity.name.function.python",
            "foreground": "var(name)"
        },
        {
            "name": "Python Function Name 2",
            "scope": "source.python meta.function.python entity.name.function.python meta.generic-name.python",
            "foreground": "var(name)"
        },
        // Python Function Call Name
        {
            "name": "Python Function Call Name",
            "scope": "source.python meta.function-call.python meta.qualified-name.python variable.function.python meta.generic-name.python",
            "foreground": "var(name)"
        },
        {
            "name": "Python Function Call Name 2",
            "scope": "source.python support.function.builtin.python",
            "foreground": "var(name)"
        },
        {
            "name": "Python Function Call Name 3",
            "scope": "source.python meta.function-call.python meta.qualified-name.python variable.function.python support.type.python",
            "foreground": "var(name)"
        },

        // Python Function Arg Name
        {
            "name": "Python Function Arg Name",
            "scope": "source.python meta.function.parameters.python variable.parameter.python",
            "foreground": "var(type)"
        },

        // Python Var Pre
        {
            "name": "Python Var Pre",
            "scope": "source.python meta.function-call.python meta.qualified-name.python meta.generic-name.python",
            "foreground": "var(name2)"
        },

        // Python Var
        {
            "name": "Python Var",
            "scope": "source.python meta.qualified-name.python meta.generic-name.python",
            "foreground": "var(name2)"
        },
        {
            "name": "Python Var 2",
            "scope": "source.python meta.generic-name.python",
            "foreground": "var(name2)"
        },
        {
            "name": "Python Var 3",
            "scope": "source.python meta.function-call.arguments.python variable.parameter.python",
            "foreground": "var(name2)"
        },
        {
            "name": "Python Var 4",
            "scope": "source.python meta.qualified-name.python variable.other.constant.python",
            "foreground": "var(name2)"
        },
        {
            "name": "Python Var 5",
            "scope": "source.python meta.function-call.python meta.qualified-name.python variable.language.python",
            "foreground": "var(name2)"
        },
        {
            "name": "Python Var 6",
            "scope": "source.python meta.qualified-name.python variable.language.python",
            "foreground": "var(name2)"
        },
        {
            "name": "Python Decorator",
            "scope": "source.python meta.annotation.function.python meta.qualified-name.python variable.annotation.function.python meta.generic-name.python",
            "foreground": "var(type)"
        },
        {
            "name": "Python Decorator Arg",
            "scope": "source.python meta.annotation.arguments.python meta.qualified-name.python meta.generic-name.python",
            "foreground": "var(type)"
        },

        // Python Keyword
        // Python Keyword Del
        {
            "name": "Python Keyword Del",
            "scope": "source.python keyword.other",
            "foreground": "var(keyword)"
        },
        // Python Keyword If-Else, Try-Except
        {
            "name": "Python Keyword If",
            "scope": "source.python keyword.control.flow",
            "foreground": "var(keyword)"
        },
        // Python Keyword Return
        {
            "name": "Python Keyword Return",
            "scope": "source.python keyword.control.flow.return.python",
            "foreground": "var(keyword)"
        },
        // Python Keyword Is
        {
            "name": "Python Keyword Is",
            "scope": "source.python meta.statement.if.python keyword.operator.logical.python",
            "foreground": "var(keyword)"
        },
        // Python Keyword With
        {
            "name": "Python Keyword With",
            "scope": "source.python meta.statement.with.python keyword.control.flow.with.python",
            "foreground": "var(keyword)"
        },
        // Python Keyword Global
        {
            "name": "Python Keyword Global",
            "scope": "source.python storage.modifier.global.python",
            "foreground": "var(type)"
        },
        // Python Keyword Import
        {
            "name": "Python Keyword Import",
            "scope": "source.python meta.statement.import.python keyword.control.import.python",
            "foreground": "var(type)"
        },
        // Python Keyword From
        {
            "name": "Python Keyword From",
            "scope": "source.python meta.statement.import.python keyword.control.import.from.python",
            "foreground": "var(type)"
        },
        // Python Keyword Import Soource
        {
            "name": "Python Keyword Import Soource",
            "scope": "source.python meta.statement.import.python meta.import-source.python meta.import-path.python meta.import-name.python",
            "foreground": "var(name2)"
        },
        // Python Keyword In
        {
            "name": "Python Keyword In",
            "scope": "source.python keyword.operator.logical.python",
            "foreground": "var(keyword)"
        },


        // Python String
        // Python String Type
        {
            "name": "Python String Type",
            "scope": "source.python storage.type.string.python",
            "foreground": "var(blue)",
            "font_style": "bold",
        },
        // Python String Placeholder
        {
            "name": "Python String Placeholder",
            "scope": "source.python meta.string.python string.quoted.double.python constant.other.placeholder.python",
            "foreground": "var(b3)"
        },
        // Python String Escape Sequence
        {
            "name": "Python String Escape Sequence",
            "scope": "source.python meta.string.python string.quoted.double.python constant.character.escape.python",
            "foreground": "var(b3)"
        },
        // Python String Regex
        {
            "name": "Python String Regex Anchor",
            "scope": "source.python source.regexp.python keyword.control.anchor.regexp",
            "foreground": "var(type)"
        },
        {
            "name": "Python String Regex Op",
            "scope": "source.python source.regexp.python keyword.operator.quantifier.regexp",
            "foreground": "var(default)"
        },
        {
            "name": "Python String Regex Group",
            "scope": "source.python source.regexp.python meta.group.regexp punctuation.definition.group",
            "foreground": "var(name)"
        },
        {
            "name": "Python String Regex Group Ref",
            "scope": "source.python source.regexp.python keyword.other.back-reference.regexp",
            "foreground": "var(name)"
        },
        {
            "name": "Python String Regex Group Symbols",
            "scope": "source.python source.regexp.python meta.group.regexp constant.character.character-class.regexp",
            "foreground": "var(name)"
        },
        {
            "name": "Python String Regex Group Symbols 2",
            "scope": "source.python source.regexp.python meta.group.regexp keyword.operator.quantifier.regexp",
            "foreground": "var(name2)"
        },
        {
            "name": "Python String Regex Set",
            "scope": "source.python source.regexp.python constant.other.character-class.set.regexp punctuation.definition.character-class",
            "foreground": "var(type)"
        },
        {
            "name": "Python String Regex Class",
            "scope": "source.python source.regexp.python constant.character.character-class.regexp",
            "foreground": "var(type)"
        },
        {
            "name": "Python String Regex Quantifier",
            "scope": "source.python source.regexp.python keyword.operator.quantifier.regexp",
            "foreground": "var(type)"
        },

        // Python Exceprion
        {
            "name": "Python Exceprion",
            "scope": "source.python meta.statement.except.python support.type.exception.python",
            "foreground": "var(mainword)"
        },

        // Class
        // Python Class
        {
            "name": "Python Class",
            "scope": "source.python meta.class.python storage.type.class.python",
            "foreground": "var(type)"
        },
        // Python Class Inheritance
        {
            "name": "Python Class Inheritance",
            "scope": "source.python meta.class.inheritance.python entity.other.inherited-class.python",
            "foreground": "var(type)"
        },
        // Python Class Name
        {
            "name": "Python Class Name",
            "scope": "source.python meta.class.python entity.name.class.python meta.generic-name.python",
            "foreground": "var(name)"
        },

        // Python Constant
        {
            "name": "Python Constant",
            "scope": "source.python constant.language.python",
            "foreground": "var(name2)"
        },
        {
            "name": "Python Constant 2",
            "scope": "source.python variable.other.constant.python",
            "foreground": "var(name2)"
        },


        // C
        // C Function Name
        {
            "name": "C Function Type",
            "scope": "source.c support.type.sys-types.c",
            "foreground": "var(type)"
        },
        {
            "name": "C Function Name",
            "scope": "source.c meta.function.c entity.name.function.c",
            "foreground": "var(name)"
        },
        {
            "name": "C Function Call",
            "scope": "source.c meta.function-call.c variable.function.c",
            "foreground": "var(name)"
        },

        // C Function Arg
        {
            "name": "C Function Arg Type",
            "scope": "source.c meta.function.parameters.c meta.group.c",
            "foreground": "var(type)"
        },
        {
            "name": "C Function Arg Name",
            "scope": "source.c meta.function.parameters.c meta.group.c variable.parameter.c",
            "foreground": "var(name2)"
        },

        // C Struct Name
        {
            "name": "C Struct Name",
            "scope": "source.c meta.struct.c entity.name.struct.c",
            "foreground": "var(name)"
        },

        // C Keyword
        {
            "name": "C Keyword",
            "scope": "source.c keyword",
            "foreground": "var(keyword)"
        },
        {
            "name": "C Keyword Modifier",
            "scope": "source.c storage.modifier.c",
            "foreground": "var(type)"
        },

        // C Type
        {
            "name": "C Type",
            "scope": "source.c storage.type.c",
            "foreground": "var(type)"
        },

        // C++
        // C++ Type
        {
            "name": "C++ Type",
            "scope": "source.c++ support.type",
            "foreground": "var(type)"
        },
        {
            "name": "C++ Type 2",
            "scope": "source.c++ storage.type",
            "foreground": "var(type)"
        },
        {
            "name": "C++ Type Modifier",
            "scope": "source.c++ storage.modifier",
            "foreground": "var(type)"
        },

        // C++ Typedef Name
        {
            "name": "C++ Typedef Name",
            "scope": "source.c++ entity.name.type.typedef.c++",
            "foreground": "var(name)"
        },

        // C++ Function
        {
            "name": "C++ Function",
            "scope": "source.c++ meta.function.c++ entity.name.function.c++",
            "foreground": "var(name)"
        },
        // C++ Function Arg Type
        {
            "name": "C++ Function Arg Type",
            "scope": "source.c++ meta.function.parameters.c++ meta.group.c++ storage.type.c",
            "foreground": "var(type)"
        },
        // C++ Function Arg Type Modifier
        {
            "name": "C++ Function Arg Type Modifier",
            "scope": "source.c++ meta.function.parameters.c++ meta.group.c++ storage.modifier.c++",
            "foreground": "var(type)"
        },
        // C++ Function Arg Name
        {
            "name": "C++ Function Arg Name",
            "scope": "source.c++ meta.function.parameters.c++ meta.group.c++ variable.parameter.c++",
            "foreground": "var(name2)"
        },

        // C++ Include
        {
            "name": "C++ Include",
            "scope": "source.c++ meta.preprocessor.include.c++ keyword.control.import.include",
            "foreground": "var(type)"
        },

        // C++ Keyword
        {
            "name": "C++ Keyword Ifdef",
            "scope": "source.c++ meta.preprocessor.c++ keyword.control",
            "foreground": "var(keyword)"
        },
        {
            "name": "C++ Keyword Define",
            "scope": "source.c++ meta.preprocessor.macro.c++ keyword.control.import.define.c++",
            "foreground": "var(type)"
        },

        // C++ Macro Name
        {
            "name": "C++ Macro Name",
            "scope": "source.c++ meta.preprocessor.macro.c++ entity.name.constant.preprocessor.c++",
            "foreground": "var(name2)"
        },


        // DOS Bat
        // DOS Bat Keyword Command
        {
            "name": "DOS Bat Keyword Command",
            "scope": "source.dosbatch keyword",
            "foreground": "var(keyword)"
        },

        // DOS Bat Keyword Command Rem
        {
            "name": "DOS Bat Keyword Command Rem",
            "scope": "source.dosbatch keyword.command.rem.dosbatch",
            "foreground": "var(default)"
        },

        // DOS Bat Var Prefix
        {
            "name": "DOS Bat Var Prefix",
            "scope": "source.dosbatch punctuation.definition.variable",
            "foreground": "var(type)"
        },


        // Makefile
        // Makefile Var
        {
            "name": "Makefile Var",
            "scope": "source.makefile variable.parameter.makefile keyword.other.block",
            "foreground": "var(type)"
        },

        // Makefile Function
        {
            "name": "Makefile Function",
            "scope": "source.makefile meta.function.makefile entity.name.function.makefile",
            "foreground": "var(name)"
        },

        // Makefile Function Call
        {
            "name": "Makefile Function Call",
            "scope": "source.makefile meta.function-call variable.function",
            "foreground": "var(name)"
        },


        // XML
        // XML Tag
        {
            "name": "XML Tag",
            "scope": "text.xml meta.tag.xml entity.name.tag",
            "foreground": "var(name)"
        },

        // XML Attr
        {
            "name": "XML Attr",
            "scope": "text.xml meta.tag.xml entity.other.attribute-name",
            "foreground": "var(name2)"
        },

        // XML Tag Namespace
        {
            "name": "XML Tag Namespace",
            "scope": "text.xml meta.tag.xml entity.name.tag.namespace.xml",
            "foreground": "var(type)"
        },

        // XML Tag Keyword
        {
            "name": "XML Tag Keyword",
            "scope": "text.xml keyword",
            "foreground": "var(mainword)"
        },

        // XML Tag Preprocessor
        {
            "name": "XML Tag Preprocessor",
            "scope": "text.xml meta.tag.preprocessor.xml entity.name.tag.xml",
            "foreground": "var(mainword)"
        },

        // XML Tag Preprocessor Attr
        {
            "name": "XML Tag Preprocessor Attr",
            "scope": "text.xml meta.tag.preprocessor.xml entity.other.attribute-name",
            "foreground": "var(name2)"
        },

        // XML Comment
        {
            "name": "XML Comment",
            "scope": "text.xml comment.block.xml",
            "foreground": "var(b3)"
        },


        // CSS
        // CSS Id
        {
            "name": "CSS Id",
            "scope": "source.css meta.selector.css entity.other.attribute-name.id.css",
            "foreground": "var(name)"
        },

        // CSS Class
        {
            "name": "CSS Class",
            "scope": "source.css meta.selector.css entity.other.attribute-name.class.css",
            "foreground": "var(name)"
        },

        // CSS Selector
        {
            "name": "CSS Selector",
            "scope": "source.css meta.selector.css",
            "foreground": "var(name)"
        },

        // CSS Selector P
        {
            "name": "CSS Selector P",
            "scope": "source.css meta.selector.css punctuation",
            "foreground": "var(default)"
        },

        // CSS Tag
        {
            "name": "CSS Tag",
            "scope": "source.css meta.selector.css entity.name.tag.css",
            "foreground": "var(name)"
        },

        // CSS Entity Keyframe
        {
            "name": "CSS Entity Keyframe",
            "scope": "source.css meta.at-rule.keyframe.css entity.other.animation-name.css",
            "foreground": "var(name)"
        },

        // CSS Id
        {
            "name": "CSS Id",
            "scope": "source.css meta.selector.css entity.other.attribute-name.id.css",
            "foreground": "var(name)"
        },

        // CSS Media
        {
            "name": "CSS Media",
            "scope": "source.css meta.at-rule.media.css support.constant.media.css",
            "foreground": "var(name)"
        },

        // CSS Property Name
        {
            "name": "CSS Property Name",
            "scope": "source.css meta.property-list.css meta.property-name.css support.type.property-name.css",
            "foreground": "var(name2)"
        },
        {
            "name": "CSS Property Name 2",
            "scope": "source.css meta.property-list.css meta.property-name.css",
            "foreground": "var(name2)"
        },

        // CSS Property Value
        {
            "name": "CSS Property Value",
            "scope": "source.css meta.property-list.css meta.property-value.css support.constant.property-value.css",
            "foreground": "var(default)"
        },

        // CSS Property Numeric Unit
        {
            "name": "CSS Property Numeric Unit",
            "scope": "source.css meta.property-list.css meta.property-value.css constant.numeric.css keyword.other.unit.css",
            "foreground": "var(type)"
        },
        {
            "name": "CSS Property Numeric Unit 2",
            "scope": "source.css meta.at-rule.media.css constant.numeric.css keyword.other.unit.css",
            "foreground": "var(type)"
        },
        {
            "name": "CSS Property Numeric Unit 3",
            "scope": "source.css constant.numeric.css keyword.other.unit.css",
            "foreground": "var(type)"
        },

        // CSS Important
        {
            "name": "CSS Important",
            "scope": "source.css meta.property-list.css meta.property-value.css keyword.other.important.css",
            "foreground": "var(mainword)"
        },

        // CSS Keyword
        {
            "name": "CSS Keyword",
            "scope": "source.css meta.at-rule.media.css keyword.operator.logic.media.css",
            "foreground": "var(keyword)"
        },

        // CSS Keyword Pseudo
        {
            "name": "CSS Keyword Pseudo",
            "scope": "source.css meta.selector.css entity.other.pseudo-element.css",
            "foreground": "var(keyword)"
        },
        {
            "name": "CSS Keyword Pseudo 2",
            "scope": "source.css meta.selector.css entity.other.pseudo-class.css",
            "foreground": "var(keyword)"
        },
        {
            "name": "CSS Keyword Pseudo Def",
            "scope": "source.css meta.selector.css entity.other.pseudo-element.css punctuation.definition.entity.css",
            "foreground": "var(default)"
        },
        {
            "name": "CSS Keyword Pseudo Def 2",
            "scope": "source.css meta.selector.css entity.other.pseudo-class.css punctuation.definition.entity.css",
            "foreground": "var(default)"
        },

        // CSS Color Prefix
        {
            "name": "CSS Color Prefix",
            "scope": "source.css meta.property-list.css meta.property-value.css constant.other.color.rgb-value.css punctuation.definition.constant.css",
            "foreground": "var(b3)"
        },

    ]
}
